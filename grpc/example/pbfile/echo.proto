syntax = "proto3";

// 生成文件夹
option go_package = "example/protos";

// 请求参数
message EchoRequest {
    string Rep = 1;
}

// 返回参数
message EchoResponse {
    string Res = 1;
}

// 指定方法模型，客户端服务端都需要知道的
service EchoService {
    // 指定参数类型和返回值类型
    rpc GetUnaryEcho (EchoRequest) returns (EchoResponse);
}

// grpc文件生成命令，分别指定生成路径、相对路径、proto文件 protoc --go_out=../proto --go_opt=paths=source_relative --go-grpc_out=../proto --go-grpc_opt=paths=source_relative trailer.proto 

//python生成命令 python -m grpc_tools.protoc -I. --python_out=. --grpc_python_out=. trailer.proto